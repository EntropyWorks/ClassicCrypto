from numpy import argsort
from itertools import permutations


def columnarTransport(s,k,decode=False):
    
    ## Add nulls if necessary
    numcol = len(k)
    numrow,rem = divmod(len(s),numcol)
    if rem != 0:
        s += "X"*(numcol-rem)
        numrow += 1

    ## In case of decrypting
    if decode == True:
        L = []
        for i in range(numrow):
            L.append(s[i::numrow])
            
        out = ""
        for i in L:
            for j in k:
                out += i[j]
        
        return out 
    
    ## Create the rows
    L = []
    for i in range(numrow):
        L.append(s[i*numcol:numcol+i*numcol])
    
    ## Read the columns 
    out = ""
    for x in argsort(k):
        out += "".join([i[x] for i in L])
        
    return out

S = "HCOOTHEAOTDHEYMAAUHAMARRARWBEHWNDNEESEERETNTIRWHATNRTRYFMRSOVEHSBRNAUTSELTEGOUEGSDENHHEYDESEERIOEUAISHVLSRDAEOMACDNIFDNEIAEASEANFOAHEEAELNFMSREHIKHABTICLITCTFPVETEIIAHSISPODISGLLSITOIIADHLVAOTTGEOIIHTOGEESNGURFISRRTTUUNBANECSDAETSSGICELTERVMHCIEITCAOHIOTCESTMOTWLPTAWRANEINWCELUONINISSSNHFHLSTDNCSTAJAODHEAAOTEFEADTTSEWSPESAAHHMDOOEOETEETSFHORAIOLNYOEITUIEESSAUACETNAEEREVECTIEYNOHEOEHECHEISEEEINAHAUEOUAFEORSONNNECUMFRSIRNSIUEOIERTUCIREIAZIOINPFRTTEFEPHIOENCSTLTETTCHWERCLIFDTTTTATLUBWTLLHESRUEMNWANISOFMRSOFCCIARLSSTSRDCIIRNTWEEONETPFIEEEISNREGNELIIECNNENGUERGNINCTNENEDEVLCEGTSCIIANTAIOWOTMFOEHNTASOEORITURAILTDIHURMRACUAEALLSEGRSGUENAEEITTAOTTUMTOLLRAEGDTITSRETRASCLNOEECDIFDCMWCEAGPAASTSTGOATAHAFDRTEEYEBHDMWIDNAAGUSTRRIEAABONEAGOOTEIEIEOSANANRAROLIINRETTELEHETNADICANTODOIUONMGIOSYEISANIRFMSMEHCEOSHCRHRHAERRGGWTEATTLEONETDENSEFHSHMRHLIHOETESINDEUHGTNLHTSFOGTSRNRCTWTTVRMHSONTEOGDUARAAOORIIPUNNNHESDARCHLSHPIETANTRINLSTLHSIVISOROSTOYMOASATLEINTEFCODITAIAATSSTNANIUNNSAIFOSMRSPRDSECNOOOLODOTUEETTENIYTIRSVRONTLETTMPANTHAIODCDEUDHEAIAEDSWIVETEFTELEFTHGGTSETTDDTHRNAYCOSDPETORCEOFOOEEOSAOEITUTRTRHSMWEDCSNTNNIRNCHAISESIRNHITAOHGEEFAIREYITOVOAEEOEREFASSISTNABFTBNPOROIEMARINOREITRTSNLAWIIIEOENMMUEREHHCOCSOLFMVVTIOEHEAHNLWUEOORULRHFNOLIXAAOIHEWABAHANUNGRLONIVCTRAIIRBCRACATMEPTDPUSMLNNPTFPGONURCGTIUAROASAORDRCMMSIEHNEOOSNILERHFNEROIEHFIOIDPIFRHTENSTEITGETHIOLGASGSERISGHEOAGDIELGNTREGTNEERROTNAUMWTPYWGTRDKTEPSDDHDEWGMEONPLTAHAINDIDETTHUEHESNGAABNGWFTAORTCADSRLSAEOFNNEDTTKERSROTUTTHOENEODMMEILHTEDANTITHOFETEETLNTLHCMSDINVRNNRALTHINEEYAOIENNERSNUNTUCIUVEERBLOEFMIEREODEAITSUEGAUTIESMSEIIRSOBIAEGFTNGEHEOOGRAHUORPNMALDSOAVGRIASADDTMFKEAEHAARIITMLSTIERIEOAEHEANWTGLOEAHRROLEATENTUTOHAONLHSESMHATTFBNNCETRNOYDVHEEESTITTROEREPOOTNAIETSUEEATOISSRSNETLSGGTHNDCIVRTRCNPMCSAENTTRESVESNRSNONEELEIDTNNELOTCNFNTICKOTPGRBFFDICMTRKEUEOERIWEAIEANEIOOTEROIRYPNFTETSEEUIOPWODTBHFSATIOUETTTHCNNNLEILONDICTRNTOAYGHITSSUNTOIIETEHITEFENHADEEERONRAIESLECURANPOUUIEEEIKNANIOEEIEOORNSNFOMTIAEAOEUNBIKTENONRIUDNCIHRRANWAHTTOALNNTTEOPNNNMNFOTAHAUAWEDNREIRHPRWTNSLFSUNCLWHANVREREROHNNIDNEUFNIPOESCELTISDNASRESNNTEMEIRVNADOBPWSDOEEIRSOTNRSHSONIXNAEANSSLOAOHAUPAIRNFOAEHLEAAHEEATDCYSTFHIHPNILRRITEUERAORSTTOJDMTTAISCTEOUSCAETIIOGAEGNICHAEFMFIALORIORNCSNFOCROSLFROOGDALHETSMGURENWSSWEIONRWSETTMSRRNNIWESTVTFEONTBTUEOOLANECRENESEIMNHSNILWDTTRGTARSOLIDNHENKFRTTWTLOSNFOPHCHGTAHECBOAORMT"
print(len(S))
for i in permutations([0,1,2,3,4,5,6]):
    x = columnarTransport(S,i,True)
    if "CHAOS" in x:
        print(x[0:40],i)